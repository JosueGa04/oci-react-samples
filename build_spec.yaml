version: 0.1
component: build

timeoutInSeconds: 3600

env:
  variables:
    REGISTRY: mx-queretaro-1.ocir.io
    NAMESPACE: axcez6ydclsd/reacttodo/hviyu
    REPO: todolistapp-springboot
  exportedVariables:
    - BUILDRUN_HASH
    - DOCKER_REGISTRY

steps:
  - type: Command
    name: üîß Compilar el proyecto Spring Boot (Maven)
    command: |
      cd MtdrSpring/backend
      mvn clean package -DskipTests

  - type: Command
    name: üß† Definir etiqueta de imagen √∫nica
    command: |
      export BUILDRUN_HASH=$(echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7)
      echo "BUILDRUN_HASH=${BUILDRUN_HASH}" >> $OCI_BUILD_RUN_EXPORT_FILE
      export DOCKER_REGISTRY=${REGISTRY}/${NAMESPACE}/${REPO}
      echo "DOCKER_REGISTRY=${DOCKER_REGISTRY}" >> $OCI_BUILD_RUN_EXPORT_FILE

  - type: Command
    name: üîê Login a OCIR
    command: |
      echo "${auth_token_ocir}" | docker login ${REGISTRY} -u "${user_ocir}" --password-stdin

  - type: Command
    name: üõ†Ô∏è Build y Push de imagen Spring Boot
    command: |
      cd MtdrSpring/backend

      echo "Verificando si existe imagen previa..."
      docker pull ${DOCKER_REGISTRY}:${BUILDRUN_HASH} || true

      echo "Construyendo imagen..."
      docker build --pull --no-cache \
        -t ${DOCKER_REGISTRY}:${BUILDRUN_HASH} \
        .

      echo "Publicando imagen..."
      docker push ${DOCKER_REGISTRY}:${BUILDRUN_HASH}

outputArtifacts:
  - name: todolist-image
    type: DOCKER_IMAGE
    location: ${REGISTRY}/${NAMESPACE}/${REPO}:${BUILDRUN_HASH}
